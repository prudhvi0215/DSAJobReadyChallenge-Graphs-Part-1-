//2
// Find path of coding ninjas in the board

bool validPoint(int x,int y,int n,int m)
{
    return (x>=0 && x<n) && (y>=0 && y<m);
}

bool dfsSearch(vector<vector<char>> &board,int n,int m,int x,int y,string word,int wordIndex,vector<vector<bool>> &visited)
{
    if(wordIndex==11){
        return true;
    }
    
    visited[x][y] = true;
    
    bool found = false;
    
    int dxdy[8][2] = {{-1,-1},{-1,0},{-1,1},{0,-1},{0,1},{1,-1},{1,0},{1,1}};
    
    for(int i=0;i<8;i++)
    {
        int newX = x + dxdy[i][0];
        int newY = y + dxdy[i][1];
        
        if(validPoint(newX,newY,n,m) && board[newX][newY] == word[wordIndex]
        && !visited[newX][newY]){
            found = dfsSearch(board,n,m,newX,newY,word,wordIndex+1,visited);
        }
    }
    
    visited[x][y] = false;
    
    return found;
}


bool hasPathCodingNinja(vector<vector<char>> &board, int n, int m)
{
    vector<vector<bool>> visited(n,vector<bool>(m,false));
    
    bool foundPath = false;
    string word = "CODINGNINJA";
    
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            if(board[i][j] == word[0])
            {
                foundPath = dfsSearch(board,n,m,i,j,word,1,visited);
                if(foundPath){
                    break;
                }
            }
        }
        if(foundPath){
            break;
        }
    }
    
    return foundPath;
}


void findPath_CodingNinjas()
{
    int n;
    int m;
    
    cin>>n>>m;
    
    vector<vector<char>> board(n,vector<char>(m));
    
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            cin>>board[i][j];
        }
    }
    
    cout<<(hasPathCodingNinja(board,n,m)?"True":"False");
    return;
}
